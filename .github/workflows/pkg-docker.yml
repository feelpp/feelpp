name: Feelpp PKG Docker
run-name: "PKG Docker Feel++ [ ${{ inputs.flavor }}/${{ inputs.dist }} ]"
on:
    workflow_dispatch:
      inputs:
        flavor:
          description: 'Flavor to build'
          required: true
          default: 'ubuntu'
          type: choice
          options:
          - 'ubuntu'
          - 'debian'
        dist:
          description: 'Distribution to build'
          required: true
          default: 'jammy'
          type: choice
          options:
          - 'jammy'
          - 'focal'
          - 'noble'
          - 'bullseye'
          - 'bookworm'
          - 'testing'
          - 'sid'
        parallel:
          description: 'Number of parallel jobs'
          required: false
          default: "20"
          type: string
        skip:
          description: 'Skip build'
          required: false
          default: ""
          type: string
    workflow_call:
        inputs:
            flavor:
                description: 'Flavor of the distribution'
                required: true
                type: string
                default: "ubuntu"
            dist:
                description: 'Name of the distribution'
                required: true
                type: string
                default: "jammy"
            version:
                description: 'Version of Feel++ packages'
                required: true
                type: string
            skip:
                description: 'Skip docker build'
                required: false
                type: string
                default: ""
            continue-on-error:
                description: 'Continue on error'
                required: false
                type: string
                default: "false"

jobs:

  version:
    if: ${{ !contains( inputs.skip, 'skip docker' ) }}
    runs-on: self-docker
    continue-on-error: ${{ inputs.continue-on-error ==  'true' }}
    outputs:
        version: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
#        lfs: true
        token: ${{ secrets.CR_PAT }}
        submodules: recursive
    - name: Get version
      id: get_version
      run: |
            cmake --preset feelpp
            cmake --build --preset feelpp -t dist
            COMPONENT=feelpp
            main_version=$(echo build/$COMPONENT/feelpp-*.tar.gz | sed  "s/build\/feelpp\/feelpp-\([0-9.]*\)-*\([a-z.0-9]*\).tar.gz/\1/g")
            extra_version=$(echo build/$COMPONENT/feelpp-*.tar.gz | sed "s/build\/feelpp\/feelpp-\([0-9.]*\)-*\([a-z.0-9]*\).tar.gz/\2/g")
            if [ -z $extra_version ]; then
                version=$(echo build/$COMPONENT/feelpp-*.tar.gz | sed  "s/build\/feelpp\/feelpp-\([0-9.]*\)-*\([a-z.0-9]*\).tar.gz/\1/g" )
            else
                version=$(echo build/$COMPONENT/feelpp-*.tar.gz | sed  "s/build\/feelpp\/feelpp-\([0-9.]*\)-*\([a-z.0-9]*\).tar.gz/\1-\2/g" )
            fi
            echo "main_version=$main_version"
            echo "extra_version=$extra_version"
            echo "version=$version"
            echo "version=$version" >> $GITHUB_OUTPUT

  docker:
    if: ${{ !contains( inputs.skip, 'skip docker' ) }}
    needs: [version]
    runs-on: self-docker
    continue-on-error: ${{ inputs.continue-on-error == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {
              service: "feelpp",
              flavor: "${{ inputs.flavor }}",
              dist: "${{ inputs.dist }}",
              version: "${{ needs.version.outputs.version }}",
              tag: "v${{ needs.version.outputs.version }}-${{ inputs.dist }}",
              dir: "feelpp/tools/scripts/pkg/",
              dockerfile: "Dockerfile",
            }
    name: Build and Push feelpp/${{ matrix.service }}:${{ matrix.tag }}

    steps:
    - uses: actions/checkout@v4
      with:
#        lfs: true
        token: ${{ secrets.CR_PAT }}
        submodules: recursive
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    -
      name: Build ${{ matrix.service }}:${{ matrix.tag }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.dir }}
        tags: ghcr.io/feelpp/${{ matrix.service }}:${{ matrix.tag }},ghcr.io/feelpp/${{ matrix.service }}:${{ matrix.dist }}
        file: ${{ matrix.dir }}/${{ matrix.dockerfile }}
        build-args: |
          IMAGE=${{ matrix.flavor }}:${{ matrix.dist }}
          FLAVOR=${{ matrix.flavor }}
          DIST=${{ matrix.dist }}
          VERSION=${{ matrix.version }}
        push: true
        secrets: |
            GIT_AUTH_TOKEN=${{ secrets.CR_PAT }}
    -
      name: Build ${{ matrix.service }}-dev:${{ matrix.tag }}
      uses: docker/build-push-action@v6
      with:
        context: ./${{ matrix.dir }}
        tags: ghcr.io/feelpp/${{ matrix.service }}-dev:${{ matrix.tag }},ghcr.io/feelpp/${{ matrix.service }}-dev:${{ matrix.dist }}
        file: ${{ matrix.dir }}/${{ matrix.dockerfile }}-dev
        build-args: TAG=${{ matrix.tag }}
        push: true
        secrets: |
            GIT_AUTH_TOKEN=${{ secrets.CR_PAT }}