circle-dirichlet --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/circle/circle-dirichlet.cfg --checker.tolerance.exact=5e-14
# comment out neumann, need to implement handling of solution up to a constant
# circle-neumann --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/circle/circle-neumann.cfg --checker.tolerance.exact=5e-14
circle-robin --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/circle/circle-robin.cfg --checker.tolerance.exact=5e-14
circle-all --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/circle/circle-all.cfg --checker.tolerance.exact=5e-14
triangle-oneelt-1 --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg --gmsh.hsize=4 --functions.g=1 --checker.solution=1 --functions.c=0
triangle-oneelt-x+y --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg --gmsh.hsize=4 --functions.g=x+y:x:y --checker.solution=x+y --functions.c=-1
triangle-oneelt-x^2+y^2 --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg --gmsh.hsize=4 --functions.g=x^2+y^2:x:y --checker.solution=x*x+y*y  --functions.f=-4 --functions.c=-2*y:y
triangle-1 --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg  --functions.g=1 --checker.solution=1 --functions.c=0
triangle-x+y --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg   --functions.g=x+y:x:y --checker.solution=x+y --functions.c=-1
triangle-x^2+y^2 --config-file ${CMAKE_CURRENT_SOURCE_DIR}/cases/triangle/triangle.cfg --functions.g=x^2+y^2:x:y --checker.solution=x*x+y*y --functions.f=-4 --functions.c=-2*y:y
